import React, { useState, useEffect } from "react";
import "./TheaterPage.css";

const TheaterPage = () => {
  const [theaters, setTheaters] = useState([]);
  const [loading, setLoading] = useState(true);
  const [filters, setFilters] = useState({
    city: "",
    district: "",
    brand: "",
    type: "",
    time: "",
    movie: "",
  });

  // D·ªØ li·ªáu gi·∫£
  const mockTheaters = [
    {
      id: 1,
      name: "R·∫°p CGV Vincom",
      address: "Vincom Center, Qu·∫≠n 1, TP.HCM",
      phone: "0123 456 789",
      brand: "CGV",
      type: "2D",
      movies: ["Avengers", "Spider-Man"],
      times: ["S√°ng", "Chi·ªÅu"],
    },
    {
      id: 2,
      name: "R·∫°p Lotte Cinema",
      address: "Lotte Mart, Qu·∫≠n 7, TP.HCM",
      phone: "0987 654 321",
      brand: "Lotte",
      type: "3D",
      movies: ["Batman", "Superman"],
      times: ["Chi·ªÅu", "T·ªëi"],
    },
    {
      id: 3,
      name: "R·∫°p Galaxy Nguy·ªÖn Du",
      address: "Nguy·ªÖn Du, Qu·∫≠n 1, TP.HCM",
      phone: "0345 678 910",
      brand: "Galaxy",
      type: "IMAX",
      movies: ["Avatar", "Titanic"],
      times: ["S√°ng", "T·ªëi"],
    },
  ];

  const [filteredTheaters, setFilteredTheaters] = useState([]);

  useEffect(() => {
    // Gi·∫£ l·∫≠p g·ªçi API
    setTimeout(() => {
      setTheaters(mockTheaters);
      setFilteredTheaters(mockTheaters);
      setLoading(false);
    }, 1000);
  }, []);

  const handleFilterChange = (e) => {
    const { name, value } = e.target;
    setFilters({ ...filters, [name]: value });
  };

  const applyFilters = () => {
    const filtered = theaters.filter((theater) => {
      const matchesCity = filters.city ? theater.address.includes(filters.city) : true;
      const matchesDistrict = filters.district ? theater.address.includes(filters.district) : true;
      const matchesBrand = filters.brand ? theater.brand === filters.brand : true;
      const matchesType = filters.type ? theater.type === filters.type : true;
      const matchesTime = filters.time ? theater.times.includes(filters.time) : true;
      const matchesMovie = filters.movie ? theater.movies.includes(filters.movie) : true;

      return matchesCity && matchesDistrict && matchesBrand && matchesType && matchesTime && matchesMovie;
    });

    setFilteredTheaters(filtered);
  };

  return (
    <div className="theater-page">
      <h1>Danh S√°ch R·∫°p</h1>

      {/* Thanh t√¨m ki·∫øm nhanh
      <div className="search-bar">
        <input type="text" placeholder="T√¨m ki·∫øm r·∫°p ho·∫∑c phim..." />
        <button>üîç</button>
      </div> */}

      <div className="filters">
        <select name="city" value={filters.city} onChange={handleFilterChange}>
          <option value="">Ch·ªçn T·ªânh/Th√†nh ph·ªë</option>
          <option value="TP.HCM">TP.HCM</option>
          <option value="H√† N·ªôi">H√† N·ªôi</option>
        </select>
        <select name="district" value={filters.district} onChange={handleFilterChange}>
          <option value="">Ch·ªçn Qu·∫≠n/Huy·ªán</option>
          <option value="Qu·∫≠n 1">Qu·∫≠n 1</option>
          <option value="Qu·∫≠n 7">Qu·∫≠n 7</option>
        </select>
        <select name="brand" value={filters.brand} onChange={handleFilterChange}>
          <option value="">Ch·ªçn Th∆∞∆°ng hi·ªáu</option>
          <option value="CGV">CGV</option>
          <option value="Lotte">Lotte</option>
          <option value="Galaxy">Galaxy</option>
        </select>
        <select name="type" value={filters.type} onChange={handleFilterChange}>
          <option value="">Ch·ªçn Lo·∫°i r·∫°p</option>
          <option value="2D">2D</option>
          <option value="3D">3D</option>
          <option value="IMAX">IMAX</option>
        </select>
        <select name="time" value={filters.time} onChange={handleFilterChange}>
          <option value="">Ch·ªçn Gi·ªù chi·∫øu</option>
          <option value="S√°ng">S√°ng</option>
          <option value="Chi·ªÅu">Chi·ªÅu</option>
          <option value="T·ªëi">T·ªëi</option>
        </select>
        <select name="movie" value={filters.movie} onChange={handleFilterChange}>
          <option value="">Ch·ªçn Phim ƒëang chi·∫øu</option>
          <option value="Avengers">Avengers</option>
          <option value="Spider-Man">Spider-Man</option>
          <option value="Batman">Batman</option>
          <option value="Avatar">Avatar</option>
        </select>
        <button onClick={applyFilters}>L·ªçc r·∫°p</button>
      </div>

      {loading ? (
        <p className="loading">ƒêang t·∫£i danh s√°ch r·∫°p...</p>
      ) : (
        <div className="theaters-grid">
          {filteredTheaters.map((theater) => (
            <div key={theater.id} className="theater-card">
              <h3>{theater.name}</h3>
              <p>ƒê·ªãa ch·ªâ: {theater.address}</p>
              <p>S·ªë ƒëi·ªán tho·∫°i: {theater.phone}</p>
              <p>Th∆∞∆°ng hi·ªáu: {theater.brand}</p>
              <p>Lo·∫°i r·∫°p: {theater.type}</p>
              <div className="theater-actions">
                <button className="view-schedule">Xem l·ªãch chi·∫øu</button>
                <button className="view-map">Xem b·∫£n ƒë·ªì</button>
              </div>
            </div>
          ))}
        </div>
      )}
    </div>
  );
};

export default TheaterPage;